class UbiArt:
    class DLC:
        def sgscontainer(jdversion):
            if jdversion==2015:
                return b'\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\xCE\x01\x8E\xDB\x33\x99\x32\x08\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
            if jdversion==5:
                return b'\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\xCE\x01\x8E\xDB\xD5\x29\xC9\x79\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00'
    
        def atlascontainer(jdversion):
            if jdversion==2015:
                return b'\x00\x00\x00\x00\x00\x00\x00\x07\x1E\x7C\xB9\x13\x00\x00\x00\x12\x44\x80\x00\x00\x44\x80\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3A\x5E\x59\xA6\x00\x00\x00\x12\x44\x80\x00\x00\x44\x80\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x98\xA9\x6D\xE6\x00\x00\x00\x12\x44\x80\x00\x00\x44\x80\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\xC4\x15\x8E\x3E\x00\x00\x00\x12\x44\x80\x00\x00\x44\x80\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\xC8\x75\x55\x2A\x00\x00\x00\x12\x44\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\xD3\x94\xD8\x22\x00\x00\x00\x12\x44\x80\x00\x00\x44\x80\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\xD5\xE1\xE3\x25\x00\x00\x00\x12\x44\x80\x00\x00\x44\x80\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00'
            if jdversion==5:
                return b'\x00\x00\x00\x00\x00\x00\x00\x06\x02\x2B\x1D\xAB\x00\x00\x00\x12\x44\x80\x00\x00\x44\x80\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x0A\x63\x6A\x70\x00\x00\x00\x12\x44\x80\x00\x00\x44\x80\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x57\xBE\xE4\xF7\x00\x00\x00\x12\x44\x80\x00\x00\x44\x80\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x60\x73\x31\xD7\x00\x00\x00\x12\x44\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x6B\xF7\xEF\x85\x00\x00\x00\x12\x44\x80\x00\x00\x44\x80\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x9E\x2C\x22\xA5\x00\x00\x00\x12\x44\x80\x00\x00\x44\x80\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00'
    
        def dlcdescriptor(jdversion, maps):
            data=b'\x4A\x44\x4C\x43' #JDLC
            data+=b'\x00\x00\x00\x01'
            data+=struct.pack('>I',jdversion)
            data+=struct.pack('>I',len(maps))
            for map in maps: data+=struct.pack('>I',len(map))+map.encode('utf8')
            return data

    def securefat(jdversion):
        ipkcount=0
        hashes=[]
        ipknames=[]
        ext=['.ipk','_wii','_x360','_ps3','_wiiu','_orbis','_durango','_pc','_nx','_gpp','_scarlett','_prospero']
        for ipk in os.listdir(cwd):
            if ipk.endswith('.ipk'):
                ua=open(cwd+'\\'+ipk,'rb') #reading hash data from ipk
                ua.read(16)
                filelist=struct.unpack('>I',ua.read(4))[0]
                ua.read(40)
                for file in range(filelist):
                    ua.read(16)
                    filename_len=struct.unpack('>I',ua.read(4))[0]
                    filename=ua.read(filename_len)
                    filepath_len=struct.unpack('>I',ua.read(4))[0]
                    filepath=ua.read(filepath_len)
                    hashes.append(ua.read(4)) #adding hash data to array
                    ua.read(16)
        data=b'\x55\x53\x46\x54' #USFT
        if jdversion==2015:
            data+=b'\xC5\x63\x9F\x58'
        if jdversion==5:
            data+=b'\x1C\x24\xB9\x1A'
        data+=b'\x00\x00\x00\x01'
        for ipk in os.listdir(cwd):
            if ipk.endswith('.ipk'):
                ipkname=ipk
                for _ext in ext:
                    ipkname=ipkname.replace(_ext,'')
                ipknames.append(ipkname)
                #hashes=hashes+UbiArt.ipkhashes(ipk)
        data+=struct.pack('>I',len(hashes))
        for ipk in os.listdir(cwd):
            if ipk.endswith('.ipk'):
                for hash in hashes: data+=hash+struct.pack('>I',1)+struct.pack('>B',ipkcount)
                ipkcount+=1
        data+=struct.pack('>I',ipkcount)
        ipkcount=0
        for ipkname in ipknames:
            data+=struct.pack('>B',ipkcount)+struct.pack('>I',len(ipkname))+ipkname.encode('utf8')
            ipkcount+=1
        return data
    
import os, shutil, json, struct
cwd=os.getcwd()
setting=json.load(open('input.json'))
if setting['gameVersion']==2014: #jd2014's version is set a 5 so change it if anyone set it as 2014.
    setting['gameVersion']=5
os.makedirs('output',exist_ok=True)
open('output/sgscontainer.ckd','wb').write(UbiArt.DLC.sgscontainer(setting['gameVersion']))
open('output/atlascontainer.ckd','wb').write(UbiArt.DLC.atlascontainer(setting['gameVersion']))
open('output/dlcdescriptor.ckd','wb').write(UbiArt.DLC.dlcdescriptor(setting['gameVersion'],setting['maps']))
open('output/secure_fat.gf','wb').write(UbiArt.securefat(setting['gameVersion']))
for ipk in os.listdir(cwd):
    if ipk.endswith('.ipk'):
        for mapname in setting['maps']:
            if mapname in ipk or mapname.lower() in ipk or mapname.upper() in ipk:
                shutil.copy2(cwd+'\\'+ipk, cwd+'\\output\\'+ipk)